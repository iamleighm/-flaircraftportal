{"version":3,"file":"theme-bundle.chunk.533.js","mappings":"+GAoBAA,EAAOC,QAJP,SAAkBC,GAChB,OAAOA,CACT,C,kBClBA,IAAIC,EAAU,EAAQ,OAClBC,EAAO,EAAQ,OAcnBJ,EAAOC,QAJP,SAAoBI,EAAQC,GAC1B,OAAOD,GAAUF,EAAQE,EAAQC,EAAUF,EAC7C,C,uIC8Fe,SAAS,EAACG,EAAcC,EAAcC,EAASC,QAAhB,IAAPF,IAAAA,EAAU,CAAC,GAQvB,mBAAZC,IAEPC,EAAWD,EACXA,EAAU,CAAC,GAIfE,EAAE,qCAAqCC,GAAG,SAAU,SAAAC,GAChD,IAAMC,EAAcH,EAAEE,EAAME,eAAeC,MAEvB,KAAhBF,GAIJG,EAAAA,GAAAA,IAAUC,QAAQC,UAAUL,EAAa,SAACM,EAAKC,GAC3C,GAAID,EAEA,OADAE,EAAAA,EAAAA,IAAed,EAAQe,aAChBb,EAASU,GAGpB,IAAMI,EAAgBb,EAAE,6BAExB,GAAKc,IAAUJ,EAASK,KAAKC,QAMtB,CACH,IAAMC,EAjGtB,SAA2BrB,GACvB,IAAMsB,EAAQC,IAAYvB,EAAawB,KAAK,cAAe,SAACC,EAAQC,GAChE,IAAMC,EAAMF,EAGZ,OAFAE,EAAID,EAAKE,MAAQF,EAAK/B,MAEfgC,CACX,GAEME,EAAwB,CAC1BC,KAAM,OACNC,GAAIT,EAAMS,GACV,aAAcT,EAAM,cACpBU,MAAO,aACPJ,KAAMN,EAAMM,KACZ,kBAAmBN,EAAM,oBAG7BtB,EAAaiC,YAAY7B,EAAE,YAAayB,IAExC,IAAMK,EAAc9B,EAAE,6BAOtB,OAL2B,IAAvB8B,EAAYC,UACZC,EAAAA,EAAAA,IAAuBF,GACvBA,EAAYG,OAAOC,KAAK,SAASC,QAG9BL,CACX,CAsEmCM,CAAkBvB,GAErCd,EAAS,KAAMkB,EACnB,KAVsC,CAElC,IAAMoB,EAlItB,SAA2BzC,EAAcC,GACrC,IAAMqB,EAAQC,IAAYvB,EAAawB,KAAK,cAAe,SAACC,EAAQC,GAChE,IAAMC,EAAMF,EAEZ,OADAE,EAAID,EAAKE,MAAQF,EAAK/B,MACfgC,CACX,GAEME,EAAwB,CAC1BE,GAAIT,EAAMS,GACV,aAAcT,EAAM,cACpBU,MAAO,cACPJ,KAAMN,EAAMM,KACZ,kBAAmBN,EAAM,oBAG7BtB,EAAaiC,YAAY7B,EAAE,oBAAqByB,IAEhD,IAAMK,EAAc9B,EAAE,6BAChBsC,EAAetC,EAAE,6BAavB,OAX4B,IAAxBsC,EAAaP,QACbO,EAAaC,SAG+B,IAA5CT,EAAYG,OAAOC,KAAK,SAASH,OAEjCD,EAAYG,OAAOO,OAAO,UAAU3C,EAAQ4C,SAAQ,YAEpDX,EAAYG,OAAOC,KAAK,SAASQ,OAG9BZ,CACX,CAkGuCa,CAAkB9B,EAAehB,IAzDxE,SAAoB+C,EAAaP,EAAgBvC,GAC7C,IAAM+C,EAAY,GAElBA,EAAUC,KAAK,oBAAoBF,EAAYG,OAAM,aAEhDjC,IAAUuB,KACXO,EAAY5B,OAAOgC,QAAQ,SAACC,GACpBnD,EAAQoD,eACRL,EAAUC,KAAK,kBAAkBG,EAAStB,GAAE,KAAKsB,EAASzB,KAAI,aAE9DqB,EAAUC,KAAK,kBAAkBG,EAASzB,KAAI,MAAKyB,EAASE,MAAQF,EAASE,MAAQF,EAASzB,MAAI,YAE1G,GAEAa,EAAee,KAAKP,EAAUQ,KAAK,MAE3C,CA2CgBC,CAAW5C,EAASK,KAAMsB,EAAgBvC,GAC1CC,EAAS,KAAMsC,EACnB,CAKJ,EACJ,EACJ,C,kBCtJA,IAAIkB,EAAW,EAAQ,OAGnBC,EAAeC,OAAOC,OAUtBC,EAAc,WAChB,SAASjE,IAAU,CACnB,OAAO,SAASkE,GACd,IAAKL,EAASK,GACZ,MAAO,CAAC,EAEV,GAAIJ,EACF,OAAOA,EAAaI,GAEtBlE,EAAOmE,UAAYD,EACnB,IAAIvC,EAAS,IAAI3B,EAEjB,OADAA,EAAOmE,eAAYC,EACZzC,CACT,CACF,CAdiB,GAgBjBhC,EAAOC,QAAUqE,C,kBC7BjB,IAAII,EAAY,EAAQ,OACpBJ,EAAa,EAAQ,OACrBK,EAAa,EAAQ,OACrBC,EAAe,EAAQ,OACvBC,EAAe,EAAQ,OACvBC,EAAU,EAAQ,OAClBC,EAAW,EAAQ,MACnBC,EAAa,EAAQ,MACrBd,EAAW,EAAQ,OACnBe,EAAe,EAAQ,OAuD3BjF,EAAOC,QAvBP,SAAmBI,EAAQC,EAAU4E,GACnC,IAAIC,EAAQL,EAAQzE,GAChB+E,EAAYD,GAASJ,EAAS1E,IAAW4E,EAAa5E,GAG1D,GADAC,EAAWsE,EAAatE,EAAU,GACf,MAAf4E,EAAqB,CACvB,IAAIG,EAAOhF,GAAUA,EAAOiF,YAE1BJ,EADEE,EACYD,EAAQ,IAAIE,EAAO,GAE1BnB,EAAS7D,IACF2E,EAAWK,GAAQf,EAAWO,EAAaxE,IAG3C,CAAC,CAEnB,CAIA,OAHC+E,EAAYV,EAAYC,GAAYtE,EAAQ,SAASH,EAAOqF,EAAOlF,GAClE,OAAOC,EAAS4E,EAAahF,EAAOqF,EAAOlF,EAC7C,GACO6E,CACT,C,0ECsFe,SAAS,EAACM,EAAOhF,GAC5B,IAAIiF,EAAuB,GACFC,GAAgCC,EAAAA,EAAAA,GAA4BnF,GAA7EoF,gBASR,OAPAJ,EAAM3C,KAAK,qBAAqBgD,KAAK,SAACN,EAAOO,GACzC,IACMC,EAAqCpF,EAAEmF,GADjBE,QAAQtE,KAAK,cAAcoC,MACA4B,EAEvDD,EAAuBA,EAAqBQ,OA9CpD,SAAyBC,EAAsBC,GAC3C,IArD6DC,EACvDC,EAEAC,EAkDAC,EAAaL,EAAqBxE,KAAK,cACvC8E,EAAmB,GACnBC,EAAoB,IAAIP,EAAqBQ,KAAK,MAExD,GAAwB,gBAApBH,EAAWlE,KAAwB,CACnC,IAAMsE,EA5Gd,SAA6BC,EAAYL,EAAYM,GAEjD,GAAIN,EAAWO,UAAYP,EAAWQ,SAAU,CAC5C,IAAMC,EAAiB,sCAAsCT,EAAWO,SAAQ,QAAQP,EAAWQ,SAAQ,IACrGE,EAAgBL,EAAWF,KAAK,MAChCQ,EAAWX,EAAWO,SAASK,MAAM,KACrCC,EAAWb,EAAWQ,SAASI,MAAM,KACrCE,EAAU,IAAIC,KAAKJ,EAAS,GAAIA,EAAS,GAAK,EAAGA,EAAS,IAC1DK,EAAU,IAAID,KAAKF,EAAS,GAAIA,EAAS,GAAK,EAAGA,EAAS,IAEhE,MAAO,CACHI,SAAU,IAAIP,EAAa,6BAC3BQ,YAAa,IAAIR,EAAa,mCAC9BS,SAAU,SAACC,EAAI3G,GACX,IAAM4G,EAAMC,OAAOjB,EAAW/D,KAAK,4BAA4B7B,OACzD8G,EAAQD,OAAOjB,EAAW/D,KAAK,8BAA8B7B,OAAS,EACtE+G,EAAOF,OAAO7G,GACdgH,EAAa,IAAIV,KAAKS,EAAMD,EAAOF,GAEzCD,EAAGK,GAAcX,GAAWW,GAAcT,EAC9C,EACApB,aAAca,EAEtB,CAEA,GAAIT,EAAWnD,YAAcmD,EAAWO,WAAaP,EAAWQ,UAAW,CACvE,IAAME,EAAgBL,EAAWF,KAAK,MAEtC,MAAO,CACHc,SAAU,IAAIP,EAAa,6BAC3BQ,YAAa,IAAIR,EAAa,mCAC9BS,SAAU,SAACC,EAAI3G,GACX,IAAM4G,EAAMhB,EAAW/D,KAAK,4BAA4B7B,MAClD8G,EAAQlB,EAAW/D,KAAK,8BAA8B7B,MAG5D2G,EAAGC,GAAOE,GAFG9G,EAGjB,EACAmF,aAAcU,EAEtB,CACJ,CAmE+BoB,CAAoB/B,EAAsBK,EAAYJ,GAEzEQ,GACAH,EAAiB/C,KAAKkD,EAE9B,MAAWJ,EAAWnD,UAAiC,mBAApBmD,EAAWlE,MAAiD,gBAApBkE,EAAWlE,KAGlF6D,EAAqBrD,KAAK,2BAA2BgD,KAAK,SAACN,EAAO2C,GAC9D,IAAMC,EAAgBxH,EAAEuH,GAClBE,EAAUD,EAAcE,IAAI,GAAGD,QAC/BE,EAAYH,EAAczB,KAAK,QAC/B6B,EAAqB9B,EAAiB,IAAI2B,EAAO,UAAUE,EAAS,KAElD,eAApB/B,EAAWlE,MACXmE,EAAiB/C,KAtCjC,SAAoC8C,EAAYE,GAC5C,IAAMO,EAAiB,iBAAiBT,EAAWzC,MAAK,oBAAoByC,EAAWiC,IAAG,QAAQjC,EAAWkC,IAAG,IAC1GD,EAAMX,OAAOtB,EAAWiC,KACxBC,EAAMZ,OAAOtB,EAAWkC,KAE9B,MAAO,CACHjB,SAAaf,EAAiB,gBAAgBF,EAAWpE,KAAI,KAC7DuF,SAAU,SAACC,EAAI3G,GACX,IAAM0H,EAAYb,OAAO7G,GAEzB2G,EAAGe,GAAaF,GAAOE,GAAaD,EACxC,EACAtC,aAAca,EAEtB,CAwBsC2B,CAA2BpC,EAAYE,IAE7DF,EAAWnD,UACXoD,EAAiB/C,KAnDjC,SAAiC8C,EAAYiB,EAAUpB,GACnD,MAAO,CACHoB,SAAAA,EACAE,SAAQ,SAACC,EAAI3G,GACT2G,EAAG3G,EAAI0B,OAAS,EACpB,EACAyD,aAAcC,EAEtB,CA2CsCwC,CAAwBrC,EAAYgC,EAAiBpC,GAEnF,GAdAK,EAAiB/C,MAhEwC2C,EAgE+BD,EA3DrF,CACHqB,SAJoB,KADlBnB,EA+DgEH,EA/DvCQ,KAAK,OACG,uBAKnCe,YAJEnB,EAAoB,IAAID,EAAW,SAKrCqB,SAAU,SAACC,GACP,IAAI3F,GAAS,EAEbrB,EAAE2F,GAAmBT,KAAK,SAACN,EAAOsD,GAC9B,GAAIA,EAASC,QAGT,OAFA9G,GAAS,GAEF,CAEf,GAEA2F,EAAG3F,EACP,EACAmE,aAAcC,KA4DlB,OAAOI,CACX,CAgB2DuC,CAAgBpI,EAAEmF,GAAQC,GACjF,GAEON,CACX,C,gDChKA,IAAMuD,EAAe,eACfC,EAAkC,SAACC,GAAU,QAAO9E,OAAOhE,KAAK8I,EAAWF,IAAetG,MAAM,EAgBzFiD,EAA8B,SAACnF,GACxC,IACM2I,EAjBqB,WAC3B,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAmB3G,OAAQ0G,IAAK,CAChD,IAAMF,EAAaI,KAAKC,MAAyBH,EAAC,GAAAC,UAAA3G,QAAD0G,OAAC3E,EAAA4E,UAADD,IACjD,GAAIH,EAAgCC,GAChC,OAAOA,CAEf,CACJ,CAU6BM,CAD+EhJ,EAAhGiJ,yBAAgGjJ,EAAtEkJ,iCAAsElJ,EAApCmJ,iCAE9DC,EAAgBxF,OAAOyF,OAAOV,EAAiBH,IAGrD,OAFwB5E,OAAOhE,KAAK+I,EAAiBH,IAAec,IAAI,SAAAC,GAAG,OAAIA,EAAI5C,MAAM,KAAK6C,KAAK,GAE5EC,OAAO,SAACC,EAAKH,EAAKX,GAErC,OADAc,EAAIH,GAAOH,EAAcR,GAClBc,CACX,EAAG,CAAC,EACR,C,YCHAlK,EAAOC,QAjBP,SAAuBkK,GACrB,OAAO,SAAS9J,EAAQC,EAAU8J,GAMhC,IALA,IAAI7E,GAAS,EACT8E,EAAWjG,OAAO/D,GAClBiK,EAAQF,EAAS/J,GACjBqC,EAAS4H,EAAM5H,OAEZA,KAAU,CACf,IAAIqH,EAAMO,EAAMH,EAAYzH,IAAW6C,GACvC,IAA+C,IAA3CjF,EAAS+J,EAASN,GAAMA,EAAKM,GAC/B,KAEJ,CACA,OAAOhK,CACT,CACF,C,YCDAL,EAAOC,QAZP,SAAmBsK,EAAOjK,GAIxB,IAHA,IAAIiF,GAAS,EACT7C,EAAkB,MAAT6H,EAAgB,EAAIA,EAAM7H,SAE9B6C,EAAQ7C,IAC8B,IAAzCpC,EAASiK,EAAMhF,GAAQA,EAAOgF,KAIpC,OAAOA,CACT,C,kBCnBA,IAaIpK,EAbgB,EAAQ,MAadqK,GAEdxK,EAAOC,QAAUE,C,kRCJ+D,IAE3DsK,EAAI,SAAAC,GACrB,SAAAD,EAAYjK,GAAS,IAAAmK,EAI8B,OAH/CA,EAAAD,EAAAE,KAAA,KAAMpK,IAAQ,MACTqK,sBAAuBlF,EAAAA,EAAAA,GAA4BnF,GACxDmK,EAAKG,mBAAqB,iCAC1BH,EAAKI,UAAYpK,EAAE,4BAA4BgK,CACnD,C,UAACD,G,EAAAD,G,sEAAA,IAAAO,EAAAP,EAAAjG,UA0MA,OA1MAwG,EAEDC,wBAAA,SAAwBC,GAAY,IAAAC,EAAA,KAC1BC,EAAaC,EAAAA,EAEnBC,KAAKC,gBAAiBC,EAAAA,EAAAA,GAAI,CACtBC,OAAQ,mCACRC,IAAKC,EAAAA,KAGTL,KAAKC,eAAeK,IAAI,CACpB,CACIpE,SAAU,wCACVE,SAAU,SAACC,EAAI3G,GAGX2G,EAFeyD,EAAWS,MAAM7K,GAGpC,EACAmF,aAAcmF,KAAK9K,QAAQsL,eAE/B,CACItE,SAAU,uCACVE,SAAU,SAACC,EAAI3G,GAGX2G,EAFeyD,EAAWW,SAAS/K,GAGvC,EACAmF,aAAcmF,KAAK9K,QAAQwL,aAInCd,EAAWtK,GAAG,SAAU,SAAAC,GACpBsK,EAAKI,eAAeU,eAEhBd,EAAKI,eAAeW,OAAO,UAI/BrL,EAAMsL,gBACV,EACJ,EAACnB,EAEDoB,iCAAA,SAAiCC,GAAqB,IAAAC,EAAA,KAClDhB,KAAKiB,yBAA0Bf,EAAAA,EAAAA,GAAI,CAC/BC,OAAQ,6CACRC,IAAKC,EAAAA,KAGTL,KAAKiB,wBAAwBX,IAAI,CAC7B,CACIpE,SAAU,4CACVE,SAAU,SAACC,EAAI3G,GAGX2G,EAFe0D,EAAAA,EAAMQ,MAAM7K,GAG/B,EACAmF,aAAcmF,KAAK9K,QAAQsL,iBAInCO,EAAoBzL,GAAG,SAAU,SAAAC,GAC7ByL,EAAKC,wBAAwBN,eAEzBK,EAAKC,wBAAwBL,OAAO,UAIxCrL,EAAMsL,gBACV,EACJ,EAACnB,EAEDwB,8BAAA,WACI,IAAAC,EAAmEnB,KAAKT,qBAAtD6B,EAAaD,EAAvBV,SAAyCY,EAAaF,EAA7BG,eAC3BC,EAAkB,qBAClBC,GAAuBtB,EAAAA,EAAAA,GAAI,CAC7BC,OAAQ9K,EAAKkM,EAAe,yBAC5BnB,IAAKC,EAAAA,KAEHoB,EAAmBpM,EAAKkM,EAAe,2BACvCG,EAAoBrM,EAAKkM,EAAe,mCACxCI,GAAoBC,EAAAA,EAAAA,IAAwCR,EAAeA,EAAeC,EAAerB,KAAK6B,qBAAqBC,OACzIC,EAAAA,GAAWC,sBACPR,EACAC,EACAC,EACA1B,KAAK6B,qBACLF,EAER,EAACjC,EAEDuC,+BAAA,SAA+BC,GAAoB,IAiBvCC,EAjBuCC,EAAA,KACzCC,GAAkBpH,EAAAA,EAAAA,GAAWiH,EAAoBlC,KAAK9K,SACtDoN,GAAyBpC,EAAAA,EAAAA,GAAI,CAC/BC,OAAWH,KAAKR,mBAAkB,wBAClC+C,MAAO,MAELC,EAAgBnN,EAAE,6BAClBoN,EAAmBzC,KAAKR,mBAAkB,oCAC1CkD,EAAgBrN,EAAEoN,GAClBhB,EAAsBzB,KAAKR,mBAAkB,gCAC7CmD,EAAmBtN,EAAEoM,GACrBC,EAAuB1B,KAAKR,mBAAkB,uCAC9CoD,EAAoBvN,EAAEqM,GAqC5B,GAnCAY,EAAuBhC,IAAI+B,GAEvBG,IAIAK,EAAAA,EAAAA,GAAaL,EAAexC,KAAK9K,QAAS,SAACY,EAAKgN,GAC5C,GAAIhN,EACA,MAAM,IAAIiN,MAAMjN,GAGpB,IAAMkN,EAAS3N,EAAEyN,GAEuC,cAApDR,EAAuBW,UAAUT,IACjCF,EAAuB1K,OAAO4K,GAG9BL,GACAG,EAAuB1K,OAAOuK,GAG9Ba,EAAOE,GAAG,WACVf,EAAQW,EACRf,EAAAA,GAAWoB,0BAA0Bb,EAAwBQ,EAAOV,EAAK7C,qBAAqBjF,kBAE9FyH,EAAAA,GAAWqB,uBAAuBN,EAE1C,GAGAJ,IACAJ,EAAuB1K,OAAO6K,GAC9BV,EAAAA,GAAWsB,mBAAmBf,EAAwBG,EAAezC,KAAKT,qBAAqB+D,cAG/FX,GAAoBC,EAAmB,CACvC,IAAAW,EAAmEvD,KAAKT,qBAAtD6B,EAAamC,EAAvB9C,SAAyCY,EAAakC,EAA7BjC,eAEjCgB,EAAuB1K,OAAO6J,GAC9Ba,EAAuB1K,OAAO8J,GAC9BK,EAAAA,GAAWC,sBACPM,EACAb,EACAC,EACA1B,KAAK6B,sBACLD,EAAAA,EAAAA,IAAwCR,EAAeA,EAAeC,EAAerB,KAAK6B,qBAAqBC,OAEvH,CAEAI,EAAmB5M,GAAG,SAAU,SAACC,GAC7B6M,EAAKoB,aAAajO,EAAO+M,EAC7B,EACJ,EAAC5C,EAED8D,aAAA,SAAajO,EAAOkO,GAChBA,EAAU9C,eAEN8C,EAAU7C,OAAO,WAGrBrL,EAAMsL,iBACN6C,WAAW,WACerO,EAAE,iCAAiCiC,KAAK,SAChDqM,QAAQ,QAC1B,EAAG,KACP,EAEAjE,EAGAkE,QAAA,WACS5D,KAAKP,UAAUrE,KAAK,UACrB4E,KAAKP,UAAUrE,KAAK,QAAS4E,KAAK9K,QAAQ2O,gBAG9C,IAAM3B,GAAqB4B,EAAAA,EAAAA,IAAa9D,KAAKR,oBACvCI,GAAakE,EAAAA,EAAAA,IAAa,eAC1B/C,GAAsB+C,EAAAA,EAAAA,IAAa,yBACnCC,GAAmBD,EAAAA,EAAAA,IAAa,sBAGtC9D,KAAK6B,qBAAuB7B,KAAK9K,QAAQ2M,qBAErCjC,EAAWxI,QACX4I,KAAKL,wBAAwBC,GAG7BmE,EAAiB3M,QACjB4I,KAAKkB,gCAGLH,EAAoB3J,QACpB4I,KAAKc,iCAAiCC,GAGtCmB,EAAmB9K,QACnB4I,KAAKiC,+BAA+BC,EAE5C,EAAC/C,CAAA,CAhNoB,CAAS6E,EAAAA,E,kBCblC,IAGIC,EAHU,EAAQ,MAGLC,CAAQpL,OAAOhE,KAAMgE,QAEtCpE,EAAOC,QAAUsP,C","sources":["webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseIteratee.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseForOwn.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/state-country.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseCreate.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/transform.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/form-validation.js","webpack://bigcommerce-cornerstone/./assets/js/theme/common/utils/translations-utils.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_createBaseFor.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_arrayEach.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/_baseFor.js","webpack://bigcommerce-cornerstone/./assets/js/theme/auth.js","webpack://bigcommerce-cornerstone/./node_modules/lodash/keys.js"],"sourcesContent":["/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","import utils from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport { insertStateHiddenField } from './utils/form-utils';\nimport { showAlertModal } from '../global/modal';\n\n/**\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\n * @returns {jQuery|HTMLElement}\n */\nfunction makeStateRequired(stateElement, context) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n        return ret;\n    });\n\n    const replacementAttributes = {\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-select',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\n\n    if ($hiddenInput.length !== 0) {\n        $hiddenInput.remove();\n    }\n\n    if ($newElement.prev().find('small').length === 0) {\n        // String is injected from localizer\n        $newElement.prev().append(`<small>${context.required}</small>`);\n    } else {\n        $newElement.prev().find('small').show();\n    }\n\n    return $newElement;\n}\n\n/**\n * If a country with states is the default, a select will be sent,\n * In this case we need to be able to switch to an input field and hide the required field\n */\nfunction makeStateOptional(stateElement) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n\n        return ret;\n    });\n\n    const replacementAttributes = {\n        type: 'text',\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-input',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<input />', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n\n    if ($newElement.length !== 0) {\n        insertStateHiddenField($newElement);\n        $newElement.prev().find('small').hide();\n    }\n\n    return $newElement;\n}\n\n/**\n * Adds the array of options from the remote request to the newly created select box.\n * @param {Object} statesArray\n * @param {jQuery} $selectElement\n * @param {Object} options\n */\nfunction addOptions(statesArray, $selectElement, options) {\n    const container = [];\n\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\n\n    if (!_.isEmpty($selectElement)) {\n        statesArray.states.forEach((stateObj) => {\n            if (options.useIdForStates) {\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\n            } else {\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.label ? stateObj.label : stateObj.name}</option>`);\n            }\n        });\n\n        $selectElement.html(container.join(' '));\n    }\n}\n\n/**\n *\n * @param {jQuery} stateElement\n * @param {Object} context\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function (stateElement, context = {}, options, callback) {\n    /**\n     * Backwards compatible for three parameters instead of four\n     *\n     * Available options:\n     *\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\n     */\n    if (typeof options === 'function') {\n        /* eslint-disable no-param-reassign */\n        callback = options;\n        options = {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    $('select[data-field-type=\"Country\"]').on('change', event => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                showAlertModal(context.state_error);\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    });\n}\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","import { createTranslationDictionary } from './utils/translations-utils';\n\n/**\n * Validate that the given date for the day/month/year select inputs is within potential range\n * @param $formField\n * @param validation\n * @returns {{selector: string, triggeredBy: string, validate: Function, errorMessage: string}}\n */\nfunction buildDateValidation($formField, validation, requiredMessage) {\n    // No date range restriction, skip\n    if (validation.min_date && validation.max_date) {\n        const invalidMessage = `Your chosen date must fall between ${validation.min_date} and ${validation.max_date}.`;\n        const formElementId = $formField.attr('id');\n        const minSplit = validation.min_date.split('-');\n        const maxSplit = validation.max_date.split('-');\n        const minDate = new Date(minSplit[0], minSplit[1] - 1, minSplit[2]);\n        const maxDate = new Date(maxSplit[0], maxSplit[1] - 1, maxSplit[2]);\n\n        return {\n            selector: `#${formElementId} select[data-label=\"year\"]`,\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\n            validate: (cb, val) => {\n                const day = Number($formField.find('select[data-label=\"day\"]').val());\n                const month = Number($formField.find('select[data-label=\"month\"]').val()) - 1;\n                const year = Number(val);\n                const chosenDate = new Date(year, month, day);\n\n                cb(chosenDate >= minDate && chosenDate <= maxDate);\n            },\n            errorMessage: invalidMessage,\n        };\n    }\n    // Required Empty Date field\n    if (validation.required && (!validation.min_date || !validation.max_date)) {\n        const formElementId = $formField.attr('id');\n\n        return {\n            selector: `#${formElementId} select[data-label=\"year\"]`,\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\n            validate: (cb, val) => {\n                const day = $formField.find('select[data-label=\"day\"]').val();\n                const month = $formField.find('select[data-label=\"month\"]').val();\n                const year = val;\n\n                cb(day && month && year);\n            },\n            errorMessage: requiredMessage,\n        };\n    }\n}\n\n/**\n * We validate checkboxes separately from single input fields, as they must have at least one checked option\n * from many different inputs\n * @param $formField\n * @param validation\n * @param errorText provides error validation message\n */\nfunction buildRequiredCheckboxValidation(validation, $formField, errorText) {\n    const formFieldId = $formField.attr('id');\n    const primarySelector = `#${formFieldId} input:first-of-type`;\n    const secondarySelector = `#${formFieldId} input`;\n\n    return {\n        selector: primarySelector,\n        triggeredBy: secondarySelector,\n        validate: (cb) => {\n            let result = false;\n\n            $(secondarySelector).each((index, checkbox) => {\n                if (checkbox.checked) {\n                    result = true;\n\n                    return false;\n                }\n            });\n\n            cb(result);\n        },\n        errorMessage: errorText,\n    };\n}\n\nfunction buildRequiredValidation(validation, selector, errorText) {\n    return {\n        selector,\n        validate(cb, val) {\n            cb(val.length > 0);\n        },\n        errorMessage: errorText,\n    };\n}\n\nfunction buildNumberRangeValidation(validation, formFieldSelector) {\n    const invalidMessage = `The value for ${validation.label} must be between ${validation.min} and ${validation.max}.`;\n    const min = Number(validation.min);\n    const max = Number(validation.max);\n\n    return {\n        selector: `${formFieldSelector} input[name=\"${validation.name}\"]`,\n        validate: (cb, val) => {\n            const numberVal = Number(val);\n\n            cb(numberVal >= min && numberVal <= max);\n        },\n        errorMessage: invalidMessage,\n    };\n}\n\n\nfunction buildValidation($validateableElement, errorMessage) {\n    const validation = $validateableElement.data('validation');\n    const fieldValidations = [];\n    const formFieldSelector = `#${$validateableElement.attr('id')}`;\n\n    if (validation.type === 'datechooser') {\n        const dateValidation = buildDateValidation($validateableElement, validation, errorMessage);\n\n        if (dateValidation) {\n            fieldValidations.push(dateValidation);\n        }\n    } else if (validation.required && (validation.type === 'checkboxselect' || validation.type === 'radioselect')) {\n        fieldValidations.push(buildRequiredCheckboxValidation(validation, $validateableElement, errorMessage));\n    } else {\n        $validateableElement.find('input, select, textarea').each((index, element) => {\n            const $inputElement = $(element);\n            const tagName = $inputElement.get(0).tagName;\n            const inputName = $inputElement.attr('name');\n            const elementSelector = `${formFieldSelector} ${tagName}[name=\"${inputName}\"]`;\n\n            if (validation.type === 'numberonly') {\n                fieldValidations.push(buildNumberRangeValidation(validation, formFieldSelector));\n            }\n            if (validation.required) {\n                fieldValidations.push(buildRequiredValidation(validation, elementSelector, errorMessage));\n            }\n        });\n    }\n\n    return fieldValidations;\n}\n\n/**\n * Builds the validation model for dynamic forms\n * @param $form\n * @param context provides access for error messages on required fields validation\n * @returns {Array}\n */\nexport default function ($form, context) {\n    let validationsToPerform = [];\n    const { field_not_blank: requiredFieldValidationText } = createTranslationDictionary(context);\n\n    $form.find('[data-validation]').each((index, input) => {\n        const getLabel = $el => $el.first().data('validation').label;\n        const requiredValidationMessage = getLabel($(input)) + requiredFieldValidationText;\n\n        validationsToPerform = validationsToPerform.concat(buildValidation($(input), requiredValidationMessage));\n    });\n\n    return validationsToPerform;\n}\n","const TRANSLATIONS = 'translations';\nconst isTranslationDictionaryNotEmpty = (dictionary) => !!Object.keys(dictionary[TRANSLATIONS]).length;\nconst chooseActiveDictionary = (...dictionaryJsonList) => {\n    for (let i = 0; i < dictionaryJsonList.length; i++) {\n        const dictionary = JSON.parse(dictionaryJsonList[i]);\n        if (isTranslationDictionaryNotEmpty(dictionary)) {\n            return dictionary;\n        }\n    }\n};\n\n/**\n * defines Translation Dictionary to use\n * @param context provides access to 3 validation JSONs from en.json:\n * validation_messages, validation_fallback_messages and default_messages\n * @returns {Object}\n */\nexport const createTranslationDictionary = (context) => {\n    const { validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON } = context;\n    const activeDictionary = chooseActiveDictionary(validationDictionaryJSON, validationFallbackDictionaryJSON, validationDefaultDictionaryJSON);\n    const localizations = Object.values(activeDictionary[TRANSLATIONS]);\n    const translationKeys = Object.keys(activeDictionary[TRANSLATIONS]).map(key => key.split('.').pop());\n\n    return translationKeys.reduce((acc, key, i) => {\n        acc[key] = localizations[i];\n        return acc;\n    }, {});\n};\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","import PageManager from './page-manager';\nimport stateCountry from './common/state-country';\nimport nod from './common/nod';\nimport validation from './common/form-validation';\nimport forms from './common/models/forms';\nimport {\n    classifyForm,\n    Validators,\n    createPasswordValidationErrorTextObject,\n    announceInputErrorMessage,\n} from './common/utils/form-utils';\nimport { createTranslationDictionary } from './common/utils/translations-utils';\n\nexport default class Auth extends PageManager {\n    constructor(context) {\n        super(context);\n        this.validationDictionary = createTranslationDictionary(context);\n        this.formCreateSelector = 'form[data-create-account-form]';\n        this.recaptcha = $('.g-recaptcha iframe[src]');\n    }\n\n    registerLoginValidation($loginForm) {\n        const loginModel = forms;\n\n        this.loginValidator = nod({\n            submit: '.login-form input[type=\"submit\"]',\n            tap: announceInputErrorMessage,\n        });\n\n        this.loginValidator.add([\n            {\n                selector: '.login-form input[name=\"login_email\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n            {\n                selector: '.login-form input[name=\"login_pass\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.password(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.enterPass,\n            },\n        ]);\n\n        $loginForm.on('submit', event => {\n            this.loginValidator.performCheck();\n\n            if (this.loginValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerForgotPasswordValidation($forgotPasswordForm) {\n        this.forgotPasswordValidator = nod({\n            submit: '.forgot-password-form input[type=\"submit\"]',\n            tap: announceInputErrorMessage,\n        });\n\n        this.forgotPasswordValidator.add([\n            {\n                selector: '.forgot-password-form input[name=\"email\"]',\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n        ]);\n\n        $forgotPasswordForm.on('submit', event => {\n            this.forgotPasswordValidator.performCheck();\n\n            if (this.forgotPasswordValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerNewPasswordValidation() {\n        const { password: enterPassword, password_match: matchPassword } = this.validationDictionary;\n        const newPasswordForm = '.new-password-form';\n        const newPasswordValidator = nod({\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\n            tap: announceInputErrorMessage,\n        });\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\n        const errorTextMessages = createPasswordValidationErrorTextObject(enterPassword, enterPassword, matchPassword, this.passwordRequirements.error);\n        Validators.setPasswordValidation(\n            newPasswordValidator,\n            passwordSelector,\n            password2Selector,\n            this.passwordRequirements,\n            errorTextMessages,\n        );\n    }\n\n    registerCreateAccountValidator($createAccountForm) {\n        const validationModel = validation($createAccountForm, this.context);\n        const createAccountValidator = nod({\n            submit: `${this.formCreateSelector} input[type='submit']`,\n            delay: 900,\n        });\n        const $stateElement = $('[data-field-type=\"State\"]');\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\n        const $emailElement = $(emailSelector);\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\n        const $passwordElement = $(passwordSelector);\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\n        const $password2Element = $(password2Selector);\n\n        createAccountValidator.add(validationModel);\n\n        if ($stateElement) {\n            let $last;\n\n            // Requests the states for a country with AJAX\n            stateCountry($stateElement, this.context, (err, field) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                const $field = $(field);\n\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\n                    createAccountValidator.remove($stateElement);\n                }\n\n                if ($last) {\n                    createAccountValidator.remove($last);\n                }\n\n                if ($field.is('select')) {\n                    $last = field;\n                    Validators.setStateCountryValidation(createAccountValidator, field, this.validationDictionary.field_not_blank);\n                } else {\n                    Validators.cleanUpStateValidation(field);\n                }\n            });\n        }\n\n        if ($emailElement) {\n            createAccountValidator.remove(emailSelector);\n            Validators.setEmailValidation(createAccountValidator, emailSelector, this.validationDictionary.valid_email);\n        }\n\n        if ($passwordElement && $password2Element) {\n            const { password: enterPassword, password_match: matchPassword } = this.validationDictionary;\n\n            createAccountValidator.remove(passwordSelector);\n            createAccountValidator.remove(password2Selector);\n            Validators.setPasswordValidation(\n                createAccountValidator,\n                passwordSelector,\n                password2Selector,\n                this.passwordRequirements,\n                createPasswordValidationErrorTextObject(enterPassword, enterPassword, matchPassword, this.passwordRequirements.error),\n            );\n        }\n\n        $createAccountForm.on('submit', (event) => {\n            this.submitAction(event, createAccountValidator);\n        });\n    }\n\n    submitAction(event, validator) {\n        validator.performCheck();\n\n        if (validator.areAll('valid')) {\n            return;\n        }\n        event.preventDefault();\n        setTimeout(() => {\n            const earliestError = $('span.form-inlineMessage:first').prev('input');\n            earliestError.trigger('focus');\n        }, 900);\n    }\n\n    /**\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\n     */\n    onReady() {\n        if (!this.recaptcha.attr('title')) {\n            this.recaptcha.attr('title', this.context.recaptchaTitle);\n        }\n\n        const $createAccountForm = classifyForm(this.formCreateSelector);\n        const $loginForm = classifyForm('.login-form');\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\n\n        // Injected via auth.html\n        this.passwordRequirements = this.context.passwordRequirements;\n\n        if ($loginForm.length) {\n            this.registerLoginValidation($loginForm);\n        }\n\n        if ($newPasswordForm.length) {\n            this.registerNewPasswordValidation();\n        }\n\n        if ($forgotPasswordForm.length) {\n            this.registerForgotPasswordValidation($forgotPasswordForm);\n        }\n\n        if ($createAccountForm.length) {\n            this.registerCreateAccountValidator($createAccountForm);\n        }\n    }\n}\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n"],"names":["module","exports","value","baseFor","keys","object","iteratee","stateElement","context","options","callback","$","on","event","countryName","currentTarget","val","utils","country","getByName","err","response","showAlertModal","state_error","$currentInput","_isEmpty","data","states","newElement","attrs","_transform","prop","result","item","ret","name","replacementAttributes","type","id","class","replaceWith","$newElement","length","insertStateHiddenField","prev","find","hide","makeStateOptional","$selectElement","$hiddenInput","remove","append","required","show","makeStateRequired","statesArray","container","push","prefix","forEach","stateObj","useIdForStates","label","html","join","addOptions","isObject","objectCreate","Object","create","baseCreate","proto","prototype","undefined","arrayEach","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isTypedArray","accumulator","isArr","isArrLike","Ctor","constructor","index","$form","validationsToPerform","requiredFieldValidationText","createTranslationDictionary","field_not_blank","each","input","requiredValidationMessage","first","concat","$validateableElement","errorMessage","errorText","formFieldId","secondarySelector","validation","fieldValidations","formFieldSelector","attr","dateValidation","$formField","requiredMessage","min_date","max_date","invalidMessage","formElementId","minSplit","split","maxSplit","minDate","Date","maxDate","selector","triggeredBy","validate","cb","day","Number","month","year","chosenDate","buildDateValidation","element","$inputElement","tagName","get","inputName","elementSelector","min","max","numberVal","buildNumberRangeValidation","buildRequiredValidation","checkbox","checked","buildValidation","TRANSLATIONS","isTranslationDictionaryNotEmpty","dictionary","activeDictionary","i","arguments","JSON","parse","chooseActiveDictionary","validationDictionaryJSON","validationFallbackDictionaryJSON","validationDefaultDictionaryJSON","localizations","values","map","key","pop","reduce","acc","fromRight","keysFunc","iterable","props","array","createBaseFor","Auth","_PageManager","_this","call","validationDictionary","formCreateSelector","recaptcha","_proto","registerLoginValidation","$loginForm","_this2","loginModel","forms","this","loginValidator","nod","submit","tap","announceInputErrorMessage","add","email","useValidEmail","password","enterPass","performCheck","areAll","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","_this3","forgotPasswordValidator","registerNewPasswordValidation","_this$validationDicti","enterPassword","matchPassword","password_match","newPasswordForm","newPasswordValidator","passwordSelector","password2Selector","errorTextMessages","createPasswordValidationErrorTextObject","passwordRequirements","error","Validators","setPasswordValidation","registerCreateAccountValidator","$createAccountForm","$last","_this4","validationModel","createAccountValidator","delay","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","stateCountry","field","Error","$field","getStatus","is","setStateCountryValidation","cleanUpStateValidation","setEmailValidation","valid_email","_this$validationDicti2","submitAction","validator","setTimeout","trigger","onReady","recaptchaTitle","classifyForm","$newPasswordForm","PageManager","nativeKeys","overArg"],"sourceRoot":""}